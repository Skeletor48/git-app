{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Chart/Chart.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spaceing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","a","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","Chart","useState","setDailyData","useEffect","fetchApi","lineChart","length","labels","datasets","label","borderColor","backgroundColor","fill","CountryPicker","FormControl","NativeSelect","App","state","fetchedData","this","setState","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d1a618e4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from \"react\";\nimport { Card, CardContent, Typography, Grid, StylesProvider } from \"@material-ui/core\";\nimport CountUp from \"react-countup\";\nimport cx from 'classnames';\n\nimport styles from \"./Cards.module.css\";\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  if (!confirmed) {\n    return \"Loading...\";\n  }\n  return (\n    <div className={styles.container}>\n      <Grid container spaceing={3} justify=\"center\">\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\n            <Typography variant=\"h5\">\n              <CountUp start={0} end={confirmed.value} duration={1.5} separator={\",\"}/>\n            </Typography>\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n            <Typography variant=\"body2\">Number of active cases of COVID-19{\" \"}</Typography>\n          </CardContent>\n        </Grid>\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\n            <Typography variant=\"h5\"> \n              <CountUp start={0} end={recovered.value} duration={1.5} separator={\",\"}/>\n            </Typography>\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n            <Typography variant=\"body2\">Number of recoveries from COVID-19{\" \"}</Typography>\n          </CardContent>\n        </Grid>\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\n            <Typography variant=\"h5\">\n              <CountUp start={0} end={deaths.value} duration={1.5} separator={\",\"}/>\n            </Typography>\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n            <Typography variant=\"body2\">Number of deaths cases by COVID-19{\" \"}</Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Cards;\n","import axios from \"axios\";\n\nconst url = \"https://covid19.mathdro.id/api\";\n\nexport const fetchData = async () => {\n  try {\n    const {\n      data: { confirmed, recovered, deaths, lastUpdate },\n    } = await axios.get(url);\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n\n    const modifiedData = data.map((dailyData) => ({\n      confirmed: dailyData.confirmed.total,\n      deaths: dailyData.deaths.total,\n      date: dailyData.reportDate,\n    }));\n\n    return modifiedData;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const countries = async () => {\n  try {\n    const response = await axios.get(`${url}/countries`);\n    return response;\n  } catch (error) {\n    console.log(error);\n    \n  }\n}","import React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Line, Bar } from \"react-chartjs-2\";\n\nimport styles from \"./Chart.module.css\";\n\nconst Chart = () => {\n  const [dailyData, setDailyData] = useState([]);\n\n  useEffect(() => {\n    const fetchApi = async () => {\n      setDailyData(await fetchDailyData());\n    }\n    console.log(dailyData);\n    fetchApi();\n  });\n\n  const lineChart = (\n    dailyData.length \n    ? ( \n    <Line\n      data={{\n        labels: dailyData.map(({date})=>{\n          return date;\n        }),\n        datasets: [{\n          data: dailyData.map(({confirmed})=>{\n            return confirmed;\n          }),\n          label: 'Infected',\n          borderColor: '#3333ff'\n        }, {\n          data: dailyData.map(({deaths})=>{\n            return deaths;\n          }),\n          label: 'Deaths',\n          borderColor: 'red',\n          backgroundColor: 'rgba(255,0,0,0.5)',\n          fill: true, \n        }],\n      }}\n    />) : null\n  );\n\n  return (\n    <div className={styles.container}>\n      {lineChart}\n    </div>\n  )\n};\n\nexport default Chart;\n","// import React, { useState, useEffect} from 'react';\nimport React from 'react';\n// import { NativeSelect, FormControl, formatMs} from '@material-ui/core'; \nimport { NativeSelect, FormControl} from '@material-ui/core'; \n// import styles from './CountryPicker.module.css';\n\n// import {countries} from '../../api';\n\n\nconst CountryPicker = () => {\n    // const [fetchCountries, setFetchCountries] = useState([]);\n\n//     useEffect(() => {\n// setFetchCountries(['country1','coutry2'])\n//     })\n    return (\n        <FormControl className=\"{styles.formControl}\">\n            <NativeSelect>\n                <option value='global'>Global</option>\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default CountryPicker;","import React from 'react';\nimport {Cards, Chart, CountryPicker} from './components';\nimport styles from './App.module.css';\nimport {fetchData} from './api';\n\nclass App extends React.Component {\n    state = {\n        data: {},\n    }\n\n    async componentDidMount(){\n        const fetchedData = await fetchData();\n        this.setState({data: fetchedData})\n    }\n\n    render() {\n        const {data} = this.state;\n        return (\n            <div className={styles.container}>\n                <Cards data={data}/>\n                <Chart />\n                <CountryPicker />\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\"};"],"sourceRoot":""}